{
  "code": "import { Admin, EventAdmin, TimerAdmin, Tools } from \"./Lwg\";\r\nimport { lwg3D } from \"./Lwg3D\";\r\nimport { _Res } from \"./_PreLoad\";\r\nexport var _MakeClothes;\r\n(function (_MakeClothes) {\r\n    let _Event;\r\n    (function (_Event) {\r\n        _Event[\"addTexture2D\"] = \"_MakeClothes_addTexture2D\";\r\n        _Event[\"rotateHanger\"] = \"_MakeClothes_rotateHanger\";\r\n        _Event[\"moveUltimately\"] = \"_MakeClothes_moveUltimately\";\r\n        _Event[\"resetTex\"] = \"_MakeClothes_resetTex\";\r\n        _Event[\"changeDir\"] = \"_MakeClothes_resetTex\";\r\n    })(_Event = _MakeClothes._Event || (_MakeClothes._Event = {}));\r\n    class MakeClothes extends Admin._SceneBase {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.Tex = {\r\n                Img: null,\r\n                DisImg: null,\r\n                imgWH: [128, 128],\r\n                touchP: null,\r\n                diffP: null,\r\n                dir: 'Front',\r\n                dirType: {\r\n                    Front: 'Front',\r\n                    Reverse: 'Reverse',\r\n                },\r\n                state: 'none',\r\n                stateType: {\r\n                    none: 'none',\r\n                    move: 'move',\r\n                    scale: 'scale',\r\n                    rotate: 'rotate',\r\n                    addTex: 'addTex',\r\n                },\r\n                createImg: (element) => {\r\n                    this.Tex.DisImg && this.Tex.DisImg.destroy();\r\n                    this.Tex.Img = Tools._Node.simpleCopyImg(element);\r\n                    let lPoint = Tools._Point.getOtherLocal(element, this._SpriteVar('Ultimately'));\r\n                    this.Tex.DisImg = Tools._Node.simpleCopyImg(element);\r\n                    this._SpriteVar('Dispaly').addChild(this.Tex.DisImg);\r\n                    this.Tex.Img.skin = this.Tex.DisImg.skin = `${element.skin.substr(0, element.skin.length - 7)}.png`;\r\n                    this.Tex.Img.x = this.Tex.DisImg.x = lPoint.x;\r\n                    this.Tex.Img.y = this.Tex.DisImg.y = lPoint.y;\r\n                    this.Tex.Img.width = this.Tex.DisImg.width = this.Tex.imgWH[0];\r\n                    this.Tex.Img.height = this.Tex.DisImg.height = this.Tex.imgWH[1];\r\n                    this.Tex.Img.pivotX = this.Tex.Img.pivotY = this.Tex.DisImg.pivotX = this.Tex.DisImg.pivotY = 64;\r\n                    this._SpriteVar('Dispaly').visible = true;\r\n                    this.Tex.restore();\r\n                },\r\n                getTex: () => {\r\n                    let ImgF = this._ImgVar(this.Tex.dirType.Front);\r\n                    let ImgR = this._ImgVar(this.Tex.dirType.Reverse);\r\n                    let arr = [\r\n                        ImgF.drawToTexture(ImgF.width, ImgF.height, ImgF.x, ImgF.y + ImgF.height),\r\n                        ImgR.drawToTexture(ImgR.width, ImgR.height, ImgR.x, ImgR.y + ImgR.height)\r\n                    ];\r\n                    return arr;\r\n                },\r\n                checkDir: () => {\r\n                    if (0 <= _MakeClothes._HangerSimRY && _MakeClothes._HangerSimRY < 180) {\r\n                        this.Tex.dir = this.Tex.dirType.Front;\r\n                    }\r\n                    else {\r\n                        this.Tex.dir = this.Tex.dirType.Reverse;\r\n                    }\r\n                },\r\n                setImgPos: () => {\r\n                    let posArr = this.Tex.setPosArr();\r\n                    let indexArr = [];\r\n                    let fOutArr = [];\r\n                    let rOutArr = [];\r\n                    for (let index = 0; index < posArr.length; index++) {\r\n                        let gPoint = this._SpriteVar('Wireframe').localToGlobal(new Laya.Point(posArr[index].x, posArr[index].y));\r\n                        let _outF = Tools._3D.rayScanning(_MakeClothes._MainCamara, _MakeClothes._Scene3D, new Laya.Vector2(gPoint.x, gPoint.y), this.Tex.dirType.Front);\r\n                        _outF && fOutArr.push(_outF);\r\n                        let _outR = Tools._3D.rayScanning(_MakeClothes._MainCamara, _MakeClothes._Scene3D, new Laya.Vector2(gPoint.x, gPoint.y), this.Tex.dirType.Reverse);\r\n                        _outR && rOutArr.push(_outR);\r\n                        if (_outF || _outR) {\r\n                            indexArr.push(posArr[index]);\r\n                        }\r\n                    }\r\n                    if (indexArr.length !== 0) {\r\n                        let out;\r\n                        if (fOutArr.length == rOutArr.length) {\r\n                            this.Tex.checkDir();\r\n                        }\r\n                        else if (fOutArr.length > rOutArr.length) {\r\n                            this.Tex.dir = this.Tex.dirType.Front;\r\n                        }\r\n                        else if (fOutArr.length < rOutArr.length) {\r\n                            this.Tex.dir = this.Tex.dirType.Reverse;\r\n                        }\r\n                        if (this.Tex.dir == this.Tex.dirType.Front) {\r\n                            out = fOutArr[fOutArr.length - 1];\r\n                        }\r\n                        else {\r\n                            out = rOutArr[rOutArr.length - 1];\r\n                        }\r\n                        this._SpriteVar(this.Tex.dir).addChild(this.Tex.Img);\r\n                        Tools._Node.changePivot(this.Tex.Img, indexArr[indexArr.length - 1].x, indexArr[indexArr.length - 1].y);\r\n                        let _width = this._ImgVar(this.Tex.dir).width;\r\n                        let _height = this._ImgVar(this.Tex.dir).height;\r\n                        let angleXZ = Tools._Point.pointByAngle(_MakeClothes._HangerP.transform.position.x - out.point.x, _MakeClothes._HangerP.transform.position.z - out.point.z);\r\n                        let _angleY;\r\n                        if (this.Tex.dir == this.Tex.dirType.Front) {\r\n                            _angleY = angleXZ + _MakeClothes._HangerSimRY;\r\n                        }\r\n                        else {\r\n                            _angleY = angleXZ + _MakeClothes._HangerSimRY - 180;\r\n                        }\r\n                        this.Tex.Img.x = _width - _width / 180 * (_angleY);\r\n                        let pH = out.point.y - _MakeClothes._HangerP.transform.position.y;\r\n                        let _DirHeight = Tools._3D.getMeshSize(_MakeClothes._Hanger.getChildByName(this.Tex.dir)).y;\r\n                        let ratio = 1 - pH / _DirHeight;\r\n                        this.Tex.Img.y = ratio * _height;\r\n                        return true;\r\n                    }\r\n                    else {\r\n                        return false;\r\n                    }\r\n                },\r\n                setPosArr: () => {\r\n                    let x = this._ImgVar('Frame').x;\r\n                    let y = this._ImgVar('Frame').y;\r\n                    let _width = this._ImgVar('Frame').width;\r\n                    let _height = this._ImgVar('Frame').height;\r\n                    return [\r\n                        new Laya.Point(x, y),\r\n                        new Laya.Point(x + _width, y),\r\n                        new Laya.Point(_width * 1 / 4, _height * 3 / 4),\r\n                        new Laya.Point(_width * 3 / 4, _height * 1 / 4),\r\n                        new Laya.Point(x + _width / 2, y + _height / 2),\r\n                        new Laya.Point(_width * 1 / 4, _height * 1 / 4),\r\n                        new Laya.Point(_width * 3 / 4, _height * 3 / 4),\r\n                        new Laya.Point(x, y + _height),\r\n                        new Laya.Point(x + _width, y + _height),\r\n                    ];\r\n                },\r\n                crashType: {\r\n                    setImgPos: 'setImgPos',\r\n                    enter: 'enter',\r\n                    inside: 'inside',\r\n                },\r\n                chekInside: () => {\r\n                    this.Tex.checkDir();\r\n                    let posArr = this.Tex.setPosArr();\r\n                    let fOutArr = [];\r\n                    let rOutArr = [];\r\n                    for (let index = 0; index < posArr.length; index++) {\r\n                        let gPoint = this._SpriteVar('Wireframe').localToGlobal(new Laya.Point(posArr[index].x, posArr[index].y));\r\n                        let _outF = Tools._3D.rayScanning(_MakeClothes._MainCamara, _MakeClothes._Scene3D, new Laya.Vector2(gPoint.x, gPoint.y), this.Tex.dirType.Front);\r\n                        _outF && fOutArr.push(_outF);\r\n                        let _outR = Tools._3D.rayScanning(_MakeClothes._MainCamara, _MakeClothes._Scene3D, new Laya.Vector2(gPoint.x, gPoint.y), this.Tex.dirType.Reverse);\r\n                        _outR && rOutArr.push(_outR);\r\n                    }\r\n                    if (fOutArr.length !== 0 || rOutArr.length !== 0) {\r\n                        return true;\r\n                    }\r\n                    else {\r\n                        return false;\r\n                    }\r\n                },\r\n                disMove: () => {\r\n                    this.Tex.DisImg.x += this.Tex.diffP.x;\r\n                    this.Tex.DisImg.y += this.Tex.diffP.y;\r\n                    let gPoint = this._SpriteVar('Dispaly').localToGlobal(new Laya.Point(this.Tex.DisImg.x, this.Tex.DisImg.y));\r\n                    this._ImgVar('Wireframe').pos(gPoint.x, gPoint.y);\r\n                },\r\n                move: (e) => {\r\n                    this.Tex.disMove();\r\n                    this._ImgVar('Wireframe').visible = false;\r\n                    if (this.Tex.chekInside()) {\r\n                        this.Tex.setImgPos();\r\n                        this._ImgVar('Wireframe').visible = true;\r\n                        this.Tex.state = this.Tex.stateType.addTex;\r\n                        this._SpriteVar('Dispaly').visible = false;\r\n                    }\r\n                },\r\n                addTex: (e) => {\r\n                    this.Tex.disMove();\r\n                    let out = this.Tex.setImgPos();\r\n                    if (!out) {\r\n                        this._ImgVar('Wireframe').visible = false;\r\n                        this.Tex.state = this.Tex.stateType.move;\r\n                        this.Tex.Img.x = Laya.stage.width;\r\n                        this._SpriteVar('Dispaly').visible = true;\r\n                    }\r\n                    EventAdmin._notify(_Event.addTexture2D, this.Tex.getTex());\r\n                },\r\n                scale: (e) => {\r\n                    let lPoint = this._ImgVar('Wireframe').globalToLocal(new Laya.Point(e.stageX, e.stageY));\r\n                    this._ImgVar('Frame').width = this._ImgVar('WConversion').x = lPoint.x;\r\n                    this._ImgVar('Frame').height = this._ImgVar('WConversion').y = lPoint.y;\r\n                    let gPoint = this._Owner.localToGlobal(new Laya.Point(this._ImgVar('Wireframe').x, this._ImgVar('Wireframe').y));\r\n                    this.Tex.Img.rotation = this.Tex.DisImg.rotation = this._ImgVar('Wireframe').rotation = Tools._Point.pointByAngle(e.stageX - gPoint.x, e.stageY - gPoint.y) + 45;\r\n                    let scaleWidth = this._ImgVar('Frame').width - this._ImgVar('Wireframe').width;\r\n                    let scaleheight = this._ImgVar('Frame').height - this._ImgVar('Wireframe').height;\r\n                    this.Tex.DisImg.width = this.Tex.Img.width = this.Tex.imgWH[0] + scaleWidth;\r\n                    this.Tex.DisImg.height = this.Tex.Img.height = this.Tex.imgWH[1] + scaleheight;\r\n                    Tools._Node.changePivot(this._ImgVar('Wireframe'), this._ImgVar('Frame').width / 2, this._ImgVar('Frame').height / 2);\r\n                    Tools._Node.changePivotCenter(this.Tex.Img);\r\n                    Tools._Node.changePivotCenter(this.Tex.DisImg);\r\n                    this.Tex.setImgPos();\r\n                    EventAdmin._notify(_Event.addTexture2D, this.Tex.getTex());\r\n                },\r\n                rotate: (e) => {\r\n                    if (this.Tex.diffP.x > 0) {\r\n                        EventAdmin._notify(_Event.rotateHanger, [1]);\r\n                    }\r\n                    else {\r\n                        EventAdmin._notify(_Event.rotateHanger, [0]);\r\n                    }\r\n                },\r\n                none: () => {\r\n                    return;\r\n                },\r\n                operation: (e) => {\r\n                    this.Tex.diffP = new Laya.Point(e.stageX - this.Tex.touchP.x, e.stageY - this.Tex.touchP.y);\r\n                    this.Tex[this.Tex.state](e);\r\n                    this.Tex.touchP = new Laya.Point(e.stageX, e.stageY);\r\n                },\r\n                restore: () => {\r\n                    this._ImgVar('Wireframe').rotation = 0;\r\n                    this._ImgVar('Wireframe').pivotX = this._ImgVar('Wireframe').width / 2;\r\n                    this._ImgVar('Wireframe').pivotY = this._ImgVar('Wireframe').height / 2;\r\n                    this._ImgVar('WConversion').x = this._ImgVar('Frame').width = this._ImgVar('Wireframe').width;\r\n                    this._ImgVar('WConversion').y = this._ImgVar('Frame').height = this._ImgVar('Wireframe').height;\r\n                    this._ImgVar('Wireframe').visible = false;\r\n                },\r\n                close: () => {\r\n                    this.Tex.restore();\r\n                    this.Tex.DisImg && this.Tex.DisImg.destroy();\r\n                    this.Tex.Img && this.Tex.Img.destroy();\r\n                    this.Tex.state = this.Tex.stateType.none;\r\n                    this.Tex.touchP = null;\r\n                    EventAdmin._notify(_Event.addTexture2D, this.Tex.getTex());\r\n                },\r\n                btn: () => {\r\n                    for (let index = 0; index < this._ImgVar('Figure').numChildren; index++) {\r\n                        const element = this._ImgVar('Figure').getChildAt(index);\r\n                        this._btnDown(element, (e) => {\r\n                            this.Tex.state = this.Tex.stateType.move;\r\n                            this.Tex.createImg(element);\r\n                        });\r\n                    }\r\n                    this._btnFour(this._ImgVar('WConversion'), (e) => {\r\n                        this.Tex.state = this.Tex.stateType.scale;\r\n                    }, null, (e) => {\r\n                        this.Tex.state = this.Tex.stateType.addTex;\r\n                    }, (e) => {\r\n                        this.Tex.state = this.Tex.stateType.addTex;\r\n                    });\r\n                    this._btnUp(this._ImgVar('WClose'), (e) => {\r\n                        this.Tex.close();\r\n                    });\r\n                    this._btnFour(this._ImgVar('BtnL'), (e) => {\r\n                        this._ImgVar('Wireframe').visible = false;\r\n                        this.Tex.state = this.Tex.stateType.rotate;\r\n                        TimerAdmin._frameLoop(1, this._ImgVar('BtnL'), () => {\r\n                            EventAdmin._notify(_Event.rotateHanger, [0]);\r\n                        });\r\n                    }, null, () => {\r\n                        Laya.timer.clearAll(this._ImgVar('BtnL'));\r\n                    }, () => {\r\n                        Laya.timer.clearAll(this._ImgVar('BtnL'));\r\n                    });\r\n                    this._btnFour(this._ImgVar('BtnR'), (e) => {\r\n                        this._ImgVar('Wireframe').visible = false;\r\n                        this.Tex.state = this.Tex.stateType.rotate;\r\n                        TimerAdmin._frameLoop(1, this._ImgVar('BtnR'), () => {\r\n                            EventAdmin._notify(_Event.rotateHanger, [1]);\r\n                        });\r\n                    }, null, () => {\r\n                        Laya.timer.clearAll(this._ImgVar('BtnR'));\r\n                    }, () => {\r\n                        Laya.timer.clearAll(this._ImgVar('BtnR'));\r\n                    });\r\n                }\r\n            };\r\n        }\r\n        lwgOnAwake() {\r\n        }\r\n        lwgAdaptive() {\r\n            this._adaWidth([this._ImgVar('BtnR'), this._ImgVar('BtnL')]);\r\n        }\r\n        lwgOnStart() {\r\n            _MakeClothes._Scene3D = _Res._list.scene3D.MakeClothes.Scene;\r\n            if (!_MakeClothes._Scene3D.getComponent(MakeClothes3D)) {\r\n                _MakeClothes._Scene3D.addComponent(MakeClothes3D);\r\n            }\r\n            else {\r\n                _MakeClothes._Scene3D.getComponent(MakeClothes3D).lwgOnStart();\r\n            }\r\n            EventAdmin._notify(_Event.addTexture2D, this.Tex.getTex());\r\n        }\r\n        lwgEvent() {\r\n        }\r\n        lwgButton() {\r\n            this.Tex.btn();\r\n            this._btnUp(this._ImgVar('BtnNext'), () => {\r\n                this._openScene('MakeUp', true, true);\r\n            });\r\n        }\r\n        onStageMouseDown(e) {\r\n            this.Tex.touchP = new Laya.Point(e.stageX, e.stageY);\r\n        }\r\n        onStageMouseMove(e) {\r\n            this.Tex.operation(e);\r\n        }\r\n        onStageMouseUp() {\r\n            !this.Tex.chekInside() && this.Tex.close();\r\n        }\r\n        lwgCloseAni() {\r\n            return 10;\r\n        }\r\n    }\r\n    _MakeClothes.MakeClothes = MakeClothes;\r\n    _MakeClothes._HangerSimRY = 90;\r\n    class MakeClothes3D extends lwg3D._Scene3DBase {\r\n        lwgOnAwake() {\r\n            _MakeClothes._Hanger = this._Child('Hanger');\r\n            _MakeClothes._HangerP = this._Child('HangerP');\r\n            _MakeClothes._MainCamara = this._MainCamera;\r\n        }\r\n        lwgEvent() {\r\n            EventAdmin._register(_Event.addTexture2D, this, (Text2DF, Text2DR) => {\r\n                let bMaterialR = this._findMRenderer('Reverse').material;\r\n                bMaterialR.albedoTexture.destroy();\r\n                bMaterialR.albedoTexture = Text2DR;\r\n                let bMaterialF = this._findMRenderer('Front').material;\r\n                bMaterialF.albedoTexture.destroy();\r\n                bMaterialF.albedoTexture = Text2DF;\r\n            });\r\n            EventAdmin._register(_Event.rotateHanger, this, (num) => {\r\n                if (num == 1) {\r\n                    this._childTrans('Hanger').localRotationEulerY++;\r\n                    _MakeClothes._HangerSimRY++;\r\n                    if (_MakeClothes._HangerSimRY > 360) {\r\n                        _MakeClothes._HangerSimRY = 0;\r\n                    }\r\n                }\r\n                else {\r\n                    this._childTrans('Hanger').localRotationEulerY--;\r\n                    _MakeClothes._HangerSimRY--;\r\n                    if (_MakeClothes._HangerSimRY < 0) {\r\n                        _MakeClothes._HangerSimRY = 359;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _MakeClothes.MakeClothes3D = MakeClothes3D;\r\n})(_MakeClothes || (_MakeClothes = {}));\r\nexport default _MakeClothes.MakeClothes;\r\n",
  "references": [
    "D:/Game/project/3DDressUp/Project_Laya2.9.0/3DDressUp_Laya2.9.0/3DDressUp_Laya2.9.0/src/script/TJ/Admanager.ts",
    "D:/Game/project/3DDressUp/Project_Laya2.9.0/3DDressUp_Laya2.9.0/3DDressUp_Laya2.9.0/src/script/Lwg/Lwg.ts",
    "D:/Game/project/3DDressUp/Project_Laya2.9.0/3DDressUp_Laya2.9.0/3DDressUp_Laya2.9.0/src/script/Lwg/Lwg3D.ts",
    "D:/Game/project/3DDressUp/Project_Laya2.9.0/3DDressUp_Laya2.9.0/3DDressUp_Laya2.9.0/src/script/Lwg/_MakeUp.ts",
    "D:/Game/project/3DDressUp/Project_Laya2.9.0/3DDressUp_Laya2.9.0/3DDressUp_Laya2.9.0/src/script/Lwg/_PreLoad.ts"
  ]
}
