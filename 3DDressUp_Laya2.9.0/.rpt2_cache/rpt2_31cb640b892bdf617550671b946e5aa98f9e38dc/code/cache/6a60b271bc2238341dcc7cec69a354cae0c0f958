{
  "code": "import { Admin } from \"./Lwg\";\r\nexport var _Task;\r\n(function (_Task) {\r\n    _Task._allClassifyArr = [];\r\n    _Task._todayDate = {\r\n        get date() {\r\n            return Laya.LocalStorage.getItem('Task_todayDate') ? Number(Laya.LocalStorage.getItem('Task_todayDate')) : null;\r\n        },\r\n        set date(date) {\r\n            Laya.LocalStorage.setItem('Task_todayDate', date.toString());\r\n        }\r\n    };\r\n    function _getProperty(ClassName, name, property) {\r\n        let pro = null;\r\n        let arr = _getClassArr(ClassName);\r\n        for (let index = 0; index < arr.length; index++) {\r\n            const element = arr[index];\r\n            if (element['name'] === name) {\r\n                pro = element[property];\r\n                break;\r\n            }\r\n        }\r\n        if (pro !== null) {\r\n            return pro;\r\n        }\r\n        else {\r\n            console.log(name + '找不到属性:' + property, pro);\r\n            return null;\r\n        }\r\n    }\r\n    _Task._getProperty = _getProperty;\r\n    function _setProperty(ClassName, name, property, value) {\r\n        let arr = _getClassArr(ClassName);\r\n        for (let index = 0; index < arr.length; index++) {\r\n            const element = arr[index];\r\n            if (element['name'] === name) {\r\n                element[property] = value;\r\n                break;\r\n            }\r\n        }\r\n        let data = {};\r\n        data[ClassName] = arr;\r\n        Laya.LocalStorage.setJSON(ClassName, JSON.stringify(data));\r\n        if (_Task._TaskList) {\r\n            _Task._TaskList.refresh();\r\n        }\r\n    }\r\n    _Task._setProperty = _setProperty;\r\n    function _getClassArr(ClassName) {\r\n        let arr = [];\r\n        switch (ClassName) {\r\n            case _Classify.everyday:\r\n                arr = _Task._everydayTask;\r\n                break;\r\n            case _Classify.perpetual:\r\n                arr = _Task._perpetualTask;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return arr;\r\n    }\r\n    _Task._getClassArr = _getClassArr;\r\n    function _doDetection(calssName, name, number) {\r\n        if (!number) {\r\n            number = 1;\r\n        }\r\n        let resCondition = _Task._getProperty(calssName, name, _Task._Property.resCondition);\r\n        let condition = _Task._getProperty(calssName, name, _Task._Property.condition);\r\n        if (_Task._getProperty(calssName, name, _Task._Property.get) !== -1) {\r\n            if (condition <= resCondition + number) {\r\n                _Task._setProperty(calssName, name, _Task._Property.resCondition, condition);\r\n                _Task._setProperty(calssName, name, _Task._Property.get, 1);\r\n                if (_Task._TaskList) {\r\n                    _Task._TaskList.refresh();\r\n                }\r\n                return true;\r\n            }\r\n            else {\r\n                _Task._setProperty(calssName, name, _Task._Property.resCondition, resCondition + number);\r\n                if (_Task._TaskList) {\r\n                    _Task._TaskList.refresh();\r\n                }\r\n                return false;\r\n            }\r\n        }\r\n        else {\r\n            return -1;\r\n        }\r\n    }\r\n    _Task._doDetection = _doDetection;\r\n    let _Property;\r\n    (function (_Property) {\r\n        _Property[\"name\"] = \"name\";\r\n        _Property[\"explain\"] = \"explain\";\r\n        _Property[\"CompeletType\"] = \"CompeletType\";\r\n        _Property[\"condition\"] = \"condition\";\r\n        _Property[\"resCondition\"] = \"resCondition\";\r\n        _Property[\"rewardType\"] = \"rewardType\";\r\n        _Property[\"rewardNum\"] = \"rewardNum\";\r\n        _Property[\"arrange\"] = \"arrange\";\r\n        _Property[\"time\"] = \"time\";\r\n        _Property[\"get\"] = \"get\";\r\n    })(_Property = _Task._Property || (_Task._Property = {}));\r\n    let _Classify;\r\n    (function (_Classify) {\r\n        _Classify[\"everyday\"] = \"Task_Everyday\";\r\n        _Classify[\"perpetual\"] = \"Task_Perpetual\";\r\n    })(_Classify = _Task._Classify || (_Task._Classify = {}));\r\n    let _Event;\r\n    (function (_Event) {\r\n        _Event[\"getAward\"] = \"Task_getAward\";\r\n        _Event[\"adsGetAward_Every\"] = \"Task_adsGetAward_Every\";\r\n        _Event[\"useSkins\"] = \"Task_useSkins\";\r\n        _Event[\"victory\"] = \"Task_victory\";\r\n        _Event[\"adsTime\"] = \"Task_adsTime\";\r\n        _Event[\"victoryBox\"] = \"Task_victoryBox\";\r\n    })(_Event = _Task._Event || (_Task._Event = {}));\r\n    let _CompeletType;\r\n    (function (_CompeletType) {\r\n        _CompeletType[\"ads\"] = \"ads\";\r\n        _CompeletType[\"victory\"] = \"victory\";\r\n        _CompeletType[\"useSkins\"] = \"useSkins\";\r\n        _CompeletType[\"treasureBox\"] = \"treasureBox\";\r\n    })(_CompeletType = _Task._CompeletType || (_Task._CompeletType = {}));\r\n    let _Name;\r\n    (function (_Name) {\r\n        _Name[\"\\u89C2\\u770B\\u5E7F\\u544A\\u83B7\\u5F97\\u91D1\\u5E01\"] = \"\\u89C2\\u770B\\u5E7F\\u544A\\u83B7\\u5F97\\u91D1\\u5E01\";\r\n        _Name[\"\\u6BCF\\u65E5\\u670D\\u52A110\\u4F4D\\u5BA2\\u4EBA\"] = \"\\u6BCF\\u65E5\\u670D\\u52A110\\u4F4D\\u5BA2\\u4EBA\";\r\n        _Name[\"\\u6BCF\\u65E5\\u89C2\\u770B\\u4E24\\u4E2A\\u5E7F\\u544A\"] = \"\\u6BCF\\u65E5\\u89C2\\u770B\\u4E24\\u4E2A\\u5E7F\\u544A\";\r\n        _Name[\"\\u6BCF\\u65E5\\u4F7F\\u75285\\u79CD\\u76AE\\u80A4\"] = \"\\u6BCF\\u65E5\\u4F7F\\u75285\\u79CD\\u76AE\\u80A4\";\r\n        _Name[\"\\u6BCF\\u65E5\\u5F00\\u542F10\\u4E2A\\u5B9D\\u7BB1\"] = \"\\u6BCF\\u65E5\\u5F00\\u542F10\\u4E2A\\u5B9D\\u7BB1\";\r\n    })(_Name = _Task._Name || (_Task._Name = {}));\r\n    function _init() {\r\n    }\r\n    _Task._init = _init;\r\n    class _TaskBase extends Admin._SceneBase {\r\n        moduleOnAwake() {\r\n            _Task._allClassifyArr = [_Task._everydayTask];\r\n            _Task._TaskTap = this._Owner['TaskTap'];\r\n            _Task._TaskList = this._Owner['TaskList'];\r\n        }\r\n        moduleOnEnable() {\r\n            this.lwgTapCreate();\r\n            this.lwgListCreate();\r\n        }\r\n        lwgTapCreate() {\r\n            _Task._TaskList.selectHandler = new Laya.Handler(this, this.lwgTapSelect);\r\n        }\r\n        lwgTapSelect(index) { }\r\n        lwgListCreate() {\r\n            _Task._TaskList.selectEnable = true;\r\n            _Task._TaskList.vScrollBarSkin = \"\";\r\n            _Task._TaskList.selectHandler = new Laya.Handler(this, this.lwgListScelet);\r\n            _Task._TaskList.renderHandler = new Laya.Handler(this, this.lwgListUpdate);\r\n            if (_Task._allClassifyArr[0]) {\r\n                _Task._TaskList.array = _Task._allClassifyArr[0];\r\n                this.lwgAddItemComponent();\r\n            }\r\n        }\r\n        lwgListScelet(index) { }\r\n        lwgListUpdate(cell, index) { }\r\n        lwgAddItemComponent() {\r\n            for (let index = 0; index < _Task._TaskList.cells.length; index++) {\r\n                const element = _Task._TaskList.cells[index];\r\n                if (!element.getComponent(TaskItem)) {\r\n                    element.addComponent(TaskItem);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _Task._TaskBase = _TaskBase;\r\n    class Task extends _Task._TaskBase {\r\n    }\r\n    _Task.Task = Task;\r\n    class TaskItem extends Admin._Object {\r\n    }\r\n    _Task.TaskItem = TaskItem;\r\n})(_Task || (_Task = {}));\r\nexport default _Task.Task;\r\n",
  "references": [
    "D:/Game/project/3DDressUp/Project_Laya2.9.0/3DDressUp_Laya2.9.0/3DDressUp_Laya2.9.0/src/script/Lwg/Lwg.ts"
  ]
}
