{
  "code": "import { Admin, Animation2D, AudioAdmin, Click, DataAdmin, Effects, EventAdmin, TimerAdmin, Tools } from \"./Lwg\";\r\nimport { _Res } from \"./_PreLoad\";\r\nexport var _MakeTailor;\r\n(function (_MakeTailor) {\r\n    let _Event;\r\n    (function (_Event) {\r\n        _Event[\"scissorTrigger\"] = \"_MakeTailor_ scissorTrigger\";\r\n        _Event[\"completeEffcet\"] = \"_MakeTailor_completeAni\";\r\n        _Event[\"changeClothes\"] = \"_MakeTailor_changeClothes\";\r\n        _Event[\"scissorAppear\"] = \"_MakeTailor_scissorAppear\";\r\n        _Event[\"scissorPlay\"] = \"_MakeTailor_scissorPlay\";\r\n        _Event[\"scissorStop\"] = \"_MakeTailor_scissorStop\";\r\n        _Event[\"scissorRotation\"] = \"_MakeTailor_scissorRotation\";\r\n        _Event[\"scissorAgain\"] = \"_MakeTailor_scissorSitu\";\r\n        _Event[\"scissorRemove\"] = \"_MakeTailor_scissorRemove\";\r\n    })(_Event = _MakeTailor._Event || (_MakeTailor._Event = {}));\r\n    class _DIYClothes extends DataAdmin._Table {\r\n        constructor() {\r\n            super(...arguments);\r\n            this._classify = {\r\n                Dress: 'Dress',\r\n                Top: 'Top',\r\n                Bottoms: 'Bottoms',\r\n            };\r\n            this._otherPro = {\r\n                color: 'color',\r\n                completeSkin: 'completeSkin'\r\n            };\r\n        }\r\n        static _ins() {\r\n            if (!this.ins) {\r\n                this.ins = new _DIYClothes('DIYClothes', _Res._list.json.DIYClothes.url, true);\r\n            }\r\n            return this.ins;\r\n        }\r\n        ;\r\n        _getColor() {\r\n            let obj = this._getPitchObj();\r\n            return [obj[`${this._otherPro.color}1`], obj[`${this._otherPro.color}2`]];\r\n        }\r\n        getClothesArr() {\r\n            if (!this.ClothesArr) {\r\n                this.ClothesArr = [];\r\n                const dataArr = _DIYClothes._ins()._arr;\r\n                for (let index = 0; index < dataArr.length; index++) {\r\n                    let CloBox = this.createClothes(`${dataArr[index]['name']}`);\r\n                    this.ClothesArr.push(CloBox);\r\n                }\r\n            }\r\n            return this.ClothesArr;\r\n        }\r\n        createClothes(name, Scene) {\r\n            const Cloth = Tools._Node.createPrefab(_Res._list.prefab2D[name]['prefab']);\r\n            const CloBox = new Laya.Sprite;\r\n            CloBox.width = Laya.stage.width;\r\n            CloBox.height = Laya.stage.height;\r\n            CloBox.pivotX = CloBox.width / 2;\r\n            CloBox.pivotY = CloBox.height / 2;\r\n            CloBox.x = Laya.stage.width / 2;\r\n            CloBox.y = Laya.stage.height / 2;\r\n            CloBox.addChild(Cloth);\r\n            CloBox.name = name;\r\n            if (Scene) {\r\n                Scene.addChild(CloBox);\r\n                CloBox.zOrder = 20;\r\n            }\r\n            return CloBox;\r\n        }\r\n    }\r\n    _MakeTailor._DIYClothes = _DIYClothes;\r\n    class _TaskClothes extends DataAdmin._Table {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.moveTime = 600;\r\n        }\r\n        static _ins() {\r\n            if (!this.ins) {\r\n                this.ins = new _TaskClothes('DIY_Task');\r\n            }\r\n            return this.ins;\r\n        }\r\n        again(Scene) {\r\n            const clothesArr = _DIYClothes._ins().getClothesArr();\r\n            const name = _DIYClothes._ins()._pitchName ? _DIYClothes._ins()._pitchName : clothesArr[0]['name'];\r\n            for (let index = 0; index < clothesArr.length; index++) {\r\n                const element = clothesArr[index];\r\n                if (element.name == name) {\r\n                    this.LastClothes = element;\r\n                    clothesArr[index] = this.Clothes = _DIYClothes._ins().createClothes(name, Scene);\r\n                    this.LineParent = this.Clothes.getChildAt(0).getChildByName('LineParent');\r\n                    this.setData();\r\n                }\r\n            }\r\n            this.clothesMove();\r\n            Animation2D.move_rotate(this.LastClothes, 45, new Laya.Point(Laya.stage.width * 1.5, Laya.stage.height * 1.5), this.moveTime, 0, () => {\r\n                this.LastClothes.removeSelf();\r\n            });\r\n        }\r\n        clothesMove() {\r\n            const time = 700;\r\n            this.Clothes.pos(0, -Laya.stage.height * 1.5);\r\n            this.Clothes.rotation = 45;\r\n            Animation2D.move_rotate(this.Clothes, 0, new Laya.Point(Laya.stage.width / 2, Laya.stage.height / 2), time);\r\n        }\r\n        changeClothes(Scene) {\r\n            const clothesArr = _DIYClothes._ins().getClothesArr();\r\n            const name = _DIYClothes._ins()._pitchName ? _DIYClothes._ins()._pitchName : clothesArr[0]['name'];\r\n            const lastName = _DIYClothes._ins()._lastPitchName;\r\n            for (let index = 0; index < clothesArr.length; index++) {\r\n                const element = clothesArr[index];\r\n                if (element.name == name) {\r\n                    element.removeSelf();\r\n                    this.Clothes = clothesArr[index] = _DIYClothes._ins().createClothes(name, Scene);\r\n                    this.LineParent = this.Clothes.getChildAt(0).getChildByName('LineParent');\r\n                    this.setData();\r\n                }\r\n                else if (element.name == lastName) {\r\n                    this.LastClothes = element;\r\n                }\r\n                else {\r\n                    element.removeSelf();\r\n                }\r\n            }\r\n            this.clothesMove();\r\n            this.LastClothes && Animation2D.move_rotate(this.LastClothes, -45, new Laya.Point(Laya.stage.width * 1.5, -Laya.stage.height * 1.5), this.moveTime, 0, () => {\r\n                this.LastClothes.removeSelf();\r\n            });\r\n        }\r\n        setData() {\r\n            this._arr = [];\r\n            for (let index = 0; index < this.LineParent.numChildren; index++) {\r\n                const Line = this.LineParent.getChildAt(index);\r\n                if (Line.numChildren > 0) {\r\n                    let data = {};\r\n                    data['Line'] = Line;\r\n                    data[this._property.name] = Line.name;\r\n                    data[this._property.conditionNum] = Line.numChildren;\r\n                    data[this._property.degreeNum] = 0;\r\n                    this._arr.push(data);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _MakeTailor._TaskClothes = _TaskClothes;\r\n    class _UI {\r\n        constructor(_Scene) {\r\n            this.time = 100;\r\n            this.delay = 100;\r\n            this.scale = 1.4;\r\n            this.Scene = _Scene;\r\n            this.Operation = _Scene['Operation'];\r\n            this.BtnAgain = Tools._Node.createPrefab(_Res._list.prefab2D.BtnAgain.prefab, _Scene, [200, 79]);\r\n            Click._on(Click._Use.value, this.BtnAgain, this, null, null, () => {\r\n                this.btnAgainClick && this.btnAgainClick();\r\n            });\r\n            this.BtnComplete = _Scene['BtnComplete'];\r\n            Click._on(Click._Use.value, this.BtnComplete, this, null, null, () => {\r\n                this.btnCompleteClick && this.btnCompleteClick();\r\n            });\r\n            this.BtnBack = Tools._Node.createPrefab(_Res._list.prefab2D.BtnBack.prefab, _Scene, [77, 79]);\r\n            Click._on(Click._Use.value, this.BtnBack, this, null, null, () => {\r\n                _Scene[_Scene.name]._openScene('Start', true, true);\r\n            });\r\n            this.BtnRollback = Tools._Node.createPrefab(_Res._list.prefab2D.BtnRollback.prefab, _Scene, [200, 79]);\r\n            Click._on(Click._Use.value, this.BtnRollback, this, null, null, () => {\r\n                this.btnRollbackClick && this.btnRollbackClick();\r\n            });\r\n            this.Operation.pos(Laya.stage.width + 500, 0);\r\n            this.BtnComplete.scale(0, 0);\r\n            this.BtnBack.scale(0, 0);\r\n            this.BtnAgain.scale(0, 0);\r\n            this.BtnRollback.scale(0, 0);\r\n        }\r\n        btnRollbackAppear(func, delay) {\r\n            Animation2D.bombs_Appear(this.BtnRollback, 0, 1, this.scale, 0, this.time * 2, () => {\r\n                func && func();\r\n            }, delay ? delay : 0);\r\n        }\r\n        ;\r\n        btnRollbackVinish(func, delay) {\r\n            Animation2D.bombs_Vanish(this.BtnRollback, 0, 0, 0, this.time * 4, () => {\r\n                func && func();\r\n            }, delay ? delay : 0);\r\n        }\r\n        ;\r\n        btnAgainAppear(func, delay) {\r\n            Animation2D.bombs_Appear(this.BtnAgain, 0, 1, this.scale, 0, this.time * 2, () => {\r\n                func && func();\r\n            }, delay ? delay : 0);\r\n        }\r\n        ;\r\n        btnAgainVinish(func, delay) {\r\n            Animation2D.bombs_Vanish(this.BtnAgain, 0, 0, 0, this.time * 4, () => {\r\n                func && func();\r\n            }, delay ? delay : 0);\r\n        }\r\n        ;\r\n        btnBackAppear(func, delay) {\r\n            Animation2D.bombs_Appear(this.BtnBack, 0, 1, this.scale, 0, this.time * 2, () => {\r\n                func && func();\r\n            }, delay ? delay : 0);\r\n        }\r\n        ;\r\n        btnBackVinish(func, delay) {\r\n            Animation2D.bombs_Vanish(this.BtnBack, 0, 0, 0, this.time * 4, () => {\r\n                func && func();\r\n            }, delay ? delay : 0);\r\n        }\r\n        ;\r\n        btnCompleteAppear(func, delay) {\r\n            Animation2D.bombs_Appear(this.BtnComplete, 0, 1, this.scale, 0, this.time * 2, () => {\r\n                func && func();\r\n            }, delay ? delay : 0);\r\n        }\r\n        btnCompleteVinish(func, delay) {\r\n            Animation2D.bombs_Vanish(this.BtnComplete, 0, 0, 0, this.time * 4, () => {\r\n                func && func();\r\n            }, delay ? delay : 0);\r\n        }\r\n        ;\r\n        operationAppear(func, delay) {\r\n            Animation2D.move(this.Operation, Laya.stage.width - this.Operation.width - 100, 0, this.time * 4, () => {\r\n                Animation2D.move(this.Operation, Laya.stage.width - this.Operation.width, 0, this.time, () => {\r\n                    func && func();\r\n                });\r\n            }, delay ? delay : 0);\r\n        }\r\n        ;\r\n        operationVinish(func, delay) {\r\n            Animation2D.bombs_Vanish(this.BtnComplete, 0, 0, 0, this.time * 4, () => {\r\n                Animation2D.move(this.Operation, this.Operation.x - 80, 0, this.time, () => {\r\n                    Animation2D.move(this.Operation, Laya.stage.width + 500, 0, this.time * 4, () => {\r\n                        func && func();\r\n                    });\r\n                });\r\n            }, delay ? delay : 0);\r\n        }\r\n    }\r\n    _MakeTailor._UI = _UI;\r\n    class _Scissor extends Admin._ObjectBase {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.Ani = {\r\n                vanishP: new Laya.Point(Laya.stage.width + 500, 0),\r\n                shearSpeed: 3,\r\n                range: 40,\r\n                dir: 'up',\r\n                dirType: {\r\n                    up: 'up',\r\n                    down: 'down',\r\n                },\r\n                paly: () => {\r\n                    TimerAdmin._clearAll([this.Ani]);\r\n                    Animation2D._clearAll([this.Ani]);\r\n                    TimerAdmin._frameLoop(1, this.Ani, () => {\r\n                        if (this._SceneImg('S2').rotation > this.Ani.range) {\r\n                            this.Ani.dir = 'up';\r\n                        }\r\n                        else if (this._SceneImg('S2').rotation <= 0) {\r\n                            this.Ani.dir = 'down';\r\n                        }\r\n                        if (this.Ani.dir == 'up') {\r\n                            this._SceneImg('S1').rotation += this.Ani.shearSpeed * 4;\r\n                            this._SceneImg('S2').rotation -= this.Ani.shearSpeed * 4;\r\n                        }\r\n                        else if (this.Ani.dir == 'down') {\r\n                            this._SceneImg('S1').rotation -= this.Ani.shearSpeed;\r\n                            this._SceneImg('S2').rotation += this.Ani.shearSpeed;\r\n                        }\r\n                    });\r\n                },\r\n                stop: () => {\r\n                    TimerAdmin._frameOnce(30, this.Ani, () => {\r\n                        let time = 100;\r\n                        TimerAdmin._clearAll([this.Ani]);\r\n                        Animation2D._clearAll([this.Ani]);\r\n                        Animation2D.rotate(this._SceneImg('S1'), -this.Ani.range / 3, time);\r\n                        Animation2D.rotate(this._SceneImg('S2'), this.Ani.range / 3, time);\r\n                    });\r\n                },\r\n                event: () => {\r\n                    this._evReg(_Event.scissorAppear, () => {\r\n                        let time = 800;\r\n                        Animation2D.move_rotate(this._Owner, this._fRotation + 360, this._fPoint, time, 0, () => {\r\n                            this._Owner.rotation = this._fRotation;\r\n                            this.Move.switch = true;\r\n                        });\r\n                    });\r\n                    this._evReg(_Event.scissorPlay, () => {\r\n                        this.Ani.paly();\r\n                    });\r\n                    this._evReg(_Event.scissorStop, () => {\r\n                        this.Ani.stop();\r\n                    });\r\n                    this._evReg(_Event.scissorRemove, (func) => {\r\n                        this.Move.switch = false;\r\n                        let disX = 1500;\r\n                        let disY = -600;\r\n                        let time = 600;\r\n                        let delay = 100;\r\n                        Animation2D.move_rotate(this._Owner, this._Owner.rotation + 360, new Laya.Point(Laya.stage.width / 2, Laya.stage.height / 2), time / 2, delay, () => {\r\n                            this._Owner.rotation = 0;\r\n                            Animation2D.move_rotate(this._Owner, -30, new Laya.Point(this._Owner.x - disX / 6, this._Owner.y - disY / 5), time / 2, delay * 1.5, () => {\r\n                                Animation2D.move_rotate(this._Owner, Tools._Number.randomOneHalf() == 0 ? 720 : -720, new Laya.Point(this._Owner.x + disX, this._Owner.y + disY), time, delay, () => {\r\n                                    func && func();\r\n                                    this._Owner.rotation = 0;\r\n                                    this._Owner.pos(this.Ani.vanishP.x, this.Ani.vanishP.y);\r\n                                });\r\n                            });\r\n                        });\r\n                    });\r\n                    this._evReg(_Event.scissorAgain, () => {\r\n                        Animation2D.move_rotate(this._Owner, this._fRotation, this._fPoint, 600, 100, () => {\r\n                            _TaskClothes._ins().again(this._Scene);\r\n                        });\r\n                    });\r\n                    this._evReg(_Event.scissorRotation, (rotate) => {\r\n                        TimerAdmin._clearAll([this._Owner]);\r\n                        const time = 10;\r\n                        let angle;\r\n                        if (Math.abs(rotate - this._Owner.rotation) < 180) {\r\n                            angle = rotate - this._Owner.rotation;\r\n                        }\r\n                        else {\r\n                            angle = -(360 - (rotate - this._Owner.rotation));\r\n                        }\r\n                        let unit = angle / time;\r\n                        TimerAdmin._frameNumLoop(1, time, this._Owner, () => {\r\n                            this._Owner.rotation += unit;\r\n                        });\r\n                    });\r\n                },\r\n                effcts: () => {\r\n                    const num = Tools._Number.randomOneInt(3, 6);\r\n                    const color1 = _DIYClothes._ins()._getColor()[0];\r\n                    const color2 = _DIYClothes._ins()._getColor()[1];\r\n                    const color = Tools._Number.randomOneHalf() === 0 ? color1 : color2;\r\n                    for (let index = 0; index < num; index++) {\r\n                        Effects._Particle._spray(this._Scene, this._point, [10, 30], null, [0, 360], [Effects._SkinUrl.三角形1], [color1, color2], [20, 90], null, null, [1, 5], [0.1, 0.2], this._Owner.zOrder - 1);\r\n                    }\r\n                }\r\n            };\r\n            this.Move = {\r\n                switch: false,\r\n                touchP: null,\r\n                diffP: null,\r\n            };\r\n        }\r\n        lwgOnAwake() {\r\n            this._Owner.pos(this.Ani.vanishP.x, this.Ani.vanishP.y);\r\n        }\r\n        lwgEvent() {\r\n            this.Ani.event();\r\n        }\r\n        lwgButton() {\r\n            this._btnFour(Laya.stage, (e) => {\r\n                if (this.Move.switch) {\r\n                    this._evNotify(_Event.scissorPlay);\r\n                    this.Move.touchP = new Laya.Point(e.stageX, e.stageY);\r\n                }\r\n            }, (e) => {\r\n                if (this.Move.touchP && this.Move.switch) {\r\n                    this.Move.diffP = new Laya.Point(e.stageX - this.Move.touchP.x, e.stageY - this.Move.touchP.y);\r\n                    this._Owner.x += this.Move.diffP.x;\r\n                    this._Owner.y += this.Move.diffP.y;\r\n                    Tools._Node.tieByStage(this._Owner);\r\n                    this.Move.touchP = new Laya.Point(e.stageX, e.stageY);\r\n                    this._evNotify(_Event.scissorPlay);\r\n                }\r\n            }, (e) => {\r\n                this._evNotify(_Event.scissorStop);\r\n                this.Move.touchP = null;\r\n            });\r\n        }\r\n        onTriggerEnter(other, _Owner) {\r\n            if (!other['cut'] && this.Move.switch) {\r\n                other['cut'] = true;\r\n                this._evNotify(_Event.scissorPlay);\r\n                this._evNotify(_Event.scissorStop);\r\n                EventAdmin._notify(_Event.scissorTrigger, [other.owner]);\r\n                this.Ani.effcts();\r\n            }\r\n        }\r\n    }\r\n    class _Item extends Admin._ObjectBase {\r\n        lwgButton() {\r\n            this._btnUp(this._Owner, () => {\r\n                console.log('换装！');\r\n                if (this._Owner['_dataSource']['name'] !== _DIYClothes._ins()._pitchName) {\r\n                    _DIYClothes._ins()._setPitch(this._Owner['_dataSource']['name']);\r\n                    this._evNotify(_Event.changeClothes);\r\n                }\r\n            }, 'no');\r\n        }\r\n    }\r\n    class MakeTailor extends Admin._SceneBase {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.effcet = {\r\n                ani1: () => {\r\n                    this._AniVar('complete').play(0, false);\r\n                    let _caller = {};\r\n                    TimerAdmin._frameLoop(1, _caller, () => {\r\n                        let gP = this._ImgVar('EFlower').parent.localToGlobal(new Laya.Point(this._ImgVar('EFlower').x, this._ImgVar('EFlower').y));\r\n                        Effects._Particle._fallingVertical(this._Owner, new Laya.Point(gP.x, gP.y - 40), [0, 0], null, null, [0, 360], [Effects._SkinUrl.花2], [[255, 222, 0, 1], [255, 222, 0, 1]], null, [100, 200], [0.8, 1.5], [0.05, 0.1]);\r\n                        Effects._Particle._fallingVertical(this._Owner, new Laya.Point(gP.x, gP.y), [0, 0], null, null, [0, 360], [Effects._SkinUrl.花2], [[255, 222, 0, 1], [255, 24, 0, 1]], null, [100, 200], [0.8, 1.5], [0.05, 0.1]);\r\n                    });\r\n                    this._AniVar('complete').on(Laya.Event.COMPLETE, this, () => {\r\n                        TimerAdmin._clearAll([_caller]);\r\n                    });\r\n                },\r\n                ani2: () => {\r\n                    let num = 6;\r\n                    let spcaing = 20;\r\n                    for (let index = 0; index < num; index++) {\r\n                        let moveY = 7 * index + 5;\r\n                        let p1 = new Laya.Point(-200, Laya.stage.height);\r\n                        let _caller = {};\r\n                        let funcL = () => {\r\n                            p1.x += spcaing;\r\n                            if (p1.x > Laya.stage.width) {\r\n                                Laya.timer.clearAll(_caller);\r\n                            }\r\n                            p1.y -= moveY;\r\n                            Effects._Particle._fallingVertical(this._Owner, new Laya.Point(p1.x, p1.y), [0, 0], null, null, [0, 360], [Effects._SkinUrl.花2], [[255, 222, 0, 1], [255, 24, 0, 1]], null, [100, 200], [0.8, 1.5], [0.05, 0.1]);\r\n                        };\r\n                        TimerAdmin._frameLoop(2, _caller, () => {\r\n                            funcL();\r\n                        });\r\n                        let p2 = new Laya.Point(Laya.stage.width + 200, Laya.stage.height);\r\n                        let _callerR = {};\r\n                        let funcR = () => {\r\n                            p2.x -= spcaing;\r\n                            if (p2.x < 0) {\r\n                                Laya.timer.clearAll(_callerR);\r\n                            }\r\n                            p2.y -= moveY;\r\n                            Effects._Particle._fallingVertical(this._Owner, new Laya.Point(p2.x, p2.y), [0, 0], null, null, [0, 360], [Effects._SkinUrl.花2], [[255, 222, 0, 1], [255, 24, 0, 1]], null, [100, 200], [0.8, 1.5], [0.05, 0.1]);\r\n                        };\r\n                        TimerAdmin._frameLoop(2, _callerR, () => {\r\n                            funcR();\r\n                        });\r\n                    }\r\n                },\r\n                ani3: () => {\r\n                    let len = Laya.stage.width;\r\n                    let _height = Laya.stage.height * 2.5;\r\n                    let Img = new Laya.Image;\r\n                    Img.width = 100;\r\n                    Img.height = _height;\r\n                    Img.rotation = 40;\r\n                    Tools._Node.changePivot(Img, 0, _height / 2);\r\n                    Img.pos(0, 0);\r\n                    Laya.stage.addChild(Img);\r\n                    Img.zOrder = 1000;\r\n                    let num = 20;\r\n                    let spcaing = 40;\r\n                    for (let index = 0; index < num; index++) {\r\n                        let p1 = new Laya.Point(0, Img.height / num * index);\r\n                        let p2 = new Laya.Point(Laya.stage.width, Img.height / num * index);\r\n                        let _caller = {};\r\n                        let func = () => {\r\n                            p1.x += spcaing;\r\n                            if (p1.x > len) {\r\n                                Laya.timer.clearAll(_caller);\r\n                            }\r\n                            p2.x -= spcaing;\r\n                            if (p2.x > len) {\r\n                                Laya.timer.clearAll(_caller);\r\n                            }\r\n                            if (index % 2 == 0) {\r\n                                Effects._Particle._fallingVertical(Img, new Laya.Point(p1.x, p1.y), [0, 0], null, null, [0, 360], [Effects._SkinUrl.星星8], [[255, 222, 0, 1], [255, 24, 0, 1]], null, [100, 200], [0.8, 1.5], [0.05, 0.1]);\r\n                            }\r\n                            else {\r\n                                Effects._Particle._fallingVertical_Reverse(Img, new Laya.Point(p2.x, p2.y), [0, 0], null, null, [0, 360], [Effects._SkinUrl.星星8], [[255, 222, 0, 1], [255, 24, 0, 1]], null, [-100, -200], [-0.8, -1.5], [-0.05, -0.1]);\r\n                            }\r\n                        };\r\n                        TimerAdmin._frameNumLoop(2, 50, _caller, () => {\r\n                            func();\r\n                        });\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        lwgOnAwake() {\r\n            this._ImgVar('Scissor').addComponent(_Scissor);\r\n            _DIYClothes._ins()._List = this._ListVar('List');\r\n            _DIYClothes._ins()._List.array = _DIYClothes._ins()._getArrByPitchClassify();\r\n            _DIYClothes._ins()._pitchName = _DIYClothes._ins()._getArrByPitchClassify()[0][_DIYClothes._ins()._property.name];\r\n            _DIYClothes._ins()._listRender = (Cell, index) => {\r\n                const data = Cell.dataSource;\r\n                const Icon = Cell.getChildByName('Icon');\r\n                Icon.skin = `Game/UI/Clothes/Icon/${data['name']}.png`;\r\n                const Board = Cell.getChildByName('Board');\r\n                Board.skin = `Lwg/UI/ui_orthogon_green.png`;\r\n                if (data[_DIYClothes._ins()._property.pitch]) {\r\n                    Board.skin = `Lwg/UI/ui_l_orthogon_green.png`;\r\n                }\r\n                else {\r\n                    Board.skin = `Lwg/UI/ui_orthogon_grass.png`;\r\n                }\r\n                if (!Cell.getComponent(_Item)) {\r\n                    Cell.addComponent(_Item);\r\n                }\r\n            };\r\n        }\r\n        lwgOnStart() {\r\n            this.UI = new _UI(this._Owner);\r\n            TimerAdmin._frameOnce(40, this, () => {\r\n                this.UI.operationAppear(() => {\r\n                    this.UI.btnAgainVinish(null, 200);\r\n                    this.UI.btnCompleteAppear();\r\n                });\r\n                this.UI.btnBackAppear();\r\n            });\r\n            this.UI.BtnRollback.visible = false;\r\n            this.UI.btnCompleteClick = () => {\r\n                this.UI.operationVinish(() => {\r\n                    this.UI.btnAgainAppear();\r\n                }, 200);\r\n                TimerAdmin._frameOnce(30, this, () => {\r\n                    this._evNotify(_Event.scissorAppear);\r\n                });\r\n            };\r\n            this.UI.btnAgainClick = () => {\r\n                this._evNotify(_Event.scissorRemove, [() => {\r\n                        _TaskClothes._ins().again(this._Owner);\r\n                    }]);\r\n                Click._switch = false;\r\n                TimerAdmin._frameOnce(60, this, () => {\r\n                    this.UI.operationAppear(() => {\r\n                        this.UI.btnAgainVinish(null, 200);\r\n                        this.UI.btnCompleteAppear();\r\n                    });\r\n                    Click._switch = true;\r\n                });\r\n            };\r\n            TimerAdmin._frameOnce(30, this, () => {\r\n                _TaskClothes._ins().changeClothes(this._Owner);\r\n            });\r\n        }\r\n        lwgEvent() {\r\n            this._evReg(_Event.changeClothes, () => {\r\n                _TaskClothes._ins().changeClothes(this._Owner);\r\n            });\r\n            this._evReg(_Event.scissorTrigger, (Dotted) => {\r\n                const Parent = Dotted.parent;\r\n                const value = _TaskClothes._ins()._checkCondition(Parent.name);\r\n                Dotted.visible = false;\r\n                let Eraser = Parent.getChildByName('Eraser');\r\n                if (!Eraser) {\r\n                    Eraser = new Laya.Sprite;\r\n                    Parent.addChild(Eraser);\r\n                }\r\n                Eraser.blendMode = \"destination-out\";\r\n                Parent.cacheAs = \"bitmap\";\r\n                Eraser.graphics.drawCircle(Dotted.x, Dotted.y, 15, '#000000');\r\n                if (value) {\r\n                    for (let index = 0; index < _TaskClothes._ins().Clothes.getChildAt(0).numChildren; index++) {\r\n                        const element = _TaskClothes._ins().Clothes.getChildAt(0).getChildAt(index);\r\n                        if (element.name.substr(5, 2) == Dotted.parent.name.substr(4, 2)) {\r\n                            let time = 1500;\r\n                            let disX = Tools._Number.randomOneInt(1000) + 1000;\r\n                            let disY = Tools._Number.randomOneInt(1000) + 1000;\r\n                            switch (element.name.substr(8)) {\r\n                                case 'U':\r\n                                    disX = 0;\r\n                                    disY = -disY;\r\n                                    break;\r\n                                case 'LU':\r\n                                    disX = -disX;\r\n                                    disY = -disY;\r\n                                    break;\r\n                                case 'L':\r\n                                    disX = -disX;\r\n                                    disY = 0;\r\n                                    break;\r\n                                case 'R':\r\n                                    disX = disX;\r\n                                    disY = 0;\r\n                                    break;\r\n                                case 'RU':\r\n                                    disY = -disY;\r\n                                    break;\r\n                                case 'D':\r\n                                    disX = 0;\r\n                                    break;\r\n                                case 'RD':\r\n                                    break;\r\n                                case 'LD':\r\n                                    disX = -disX;\r\n                                    break;\r\n                                default:\r\n                                    break;\r\n                            }\r\n                            Animation2D.move_rotate(element, 0, new Laya.Point(element.x + disX / 30, element.y + disY / 30), time / 6, 0, () => {\r\n                                let rotate1 = Tools._Number.randomOneBySection(180);\r\n                                let rotate2 = Tools._Number.randomOneBySection(-180);\r\n                                Animation2D.move_rotate(element, Tools._Number.randomOneHalf() == 0 ? rotate1 : rotate2, new Laya.Point(element.x + disX, element.y + disY), time, 0, () => {\r\n                                    Animation2D.fadeOut(element, 1, 0, 200);\r\n                                });\r\n                            });\r\n                        }\r\n                    }\r\n                    if (_TaskClothes._ins()._checkAllCompelet()) {\r\n                        Tools._Node.removeAllChildren(_TaskClothes._ins().LineParent);\r\n                        this._evNotify(_Event.scissorRemove);\r\n                        TimerAdmin._frameOnce(80, this, () => {\r\n                            this._evNotify(_Event.completeEffcet);\r\n                        });\r\n                        TimerAdmin._frameOnce(280, this, () => {\r\n                            this._openScene('MakePattern', true, true);\r\n                        });\r\n                    }\r\n                }\r\n                const gPos = Dotted.parent.localToGlobal(new Laya.Point(Dotted.x, Dotted.y));\r\n                if (Dotted.name == 'A') {\r\n                    if (this._ImgVar('Scissor').x <= gPos.x) {\r\n                        this._evNotify(_Event.scissorRotation, [Dotted.rotation]);\r\n                    }\r\n                    else {\r\n                        this._evNotify(_Event.scissorRotation, [180 + Dotted.rotation]);\r\n                    }\r\n                }\r\n                else {\r\n                    if (this._ImgVar('Scissor').y >= gPos.y) {\r\n                        this._evNotify(_Event.scissorRotation, [Dotted.rotation]);\r\n                    }\r\n                    else {\r\n                        this._evNotify(_Event.scissorRotation, [180 + Dotted.rotation]);\r\n                    }\r\n                }\r\n            });\r\n            this._evReg(_Event.completeEffcet, () => {\r\n                this.UI.btnBackVinish();\r\n                this.UI.btnAgainVinish();\r\n                AudioAdmin._playVictorySound();\r\n                this.effcet.ani1();\r\n            });\r\n        }\r\n    }\r\n    _MakeTailor.MakeTailor = MakeTailor;\r\n})(_MakeTailor || (_MakeTailor = {}));\r\n",
  "references": [
    "D:/Game/project/3DDressUp/Project_Laya2.9.0/3DDressUp_Laya2.9.0/3DDressUp_Laya2.9.0/src/script/Lwg/Lwg.ts",
    "D:/Game/project/3DDressUp/Project_Laya2.9.0/3DDressUp_Laya2.9.0/3DDressUp_Laya2.9.0/src/script/Lwg/_PreLoad.ts"
  ]
}
